<head>
    <title>Asignar Equipos de Computo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
</head>
<%- include ('layouts/dashboard.ejs') %>
        <div class="container mt-5">      
            <div class="col-md-20">
                <form action="/asignacionJ" method="POST">
                    <h1>Asignar Equipos de Computo</h1><br>
                    <input type="hidden" class="form-control mb-3" name="id">

                    <select name="folio" id="folio" class="form-control mb-3" required>
                        <option selected>Seleccione el folio del equipo</option>
                    </select>
                    <input type="text" class="form-control mb-3" name="serie" placeholder="Serie" readonly>
                    <input type="text" class="form-control mb-3" name="marca" placeholder="Marca" readonly>
                    <input type="text" class="form-control mb-3" name="tipo"  placeholder="Tipo Equipo" readonly>
                    <input type="text" class="form-control mb-3" name="modelo" placeholder="Modelo" readonly>
                    <input type="text" class="form-control mb-3" name="ram" placeholder="RAM" readonly>
                    <input type="text" class="form-control mb-3" name="velocidad" placeholder="Velocidad" readonly>
                    <input type="text" class="form-control mb-3" name="disco" placeholder="Disco Duro" readonly>

                    <select name="personal" id="personal" class="form-control mb-3" required>
                        <option selected>Seleccione al personal encargado del equipo</option>
                    </select>

                    <select name="lugar" id="lugar" class="form-control mb-3" required>
                        <option selected>Seleccione el lugar donde estara el equipo</option>
                    </select>
                    <input type="text" class="form-control mb-3" name="edificio"  placeholder="Edificio" readonly>

                    <input type="date" class="form-control mb-3" name="fecha" id="fecha" readonly>
                    <input type="text" class="form-control mb-3" name="estado" value="ASIGNADO" readonly>

                    <input type="submit" class="btn btn-primary">
                </form>
            </div>
        </div>
    <!-- Content End -->

    <!-- Back to Top -->
    <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a> 
</div>

<!-- JavaScript Libraries -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="resources/lib/chart/chart.min.js"></script>
<script src="resources/lib/easing/easing.min.js"></script>
<script src="resources/lib/waypoints/waypoints.min.js"></script>
<script src="resources/lib/owlcarousel/owl.carousel.min.js"></script>
<script src="resources/lib/tempusdominus/js/moment.min.js"></script>
<script src="resources/lib/tempusdominus/js/moment-timezone.min.js"></script>
<script src="resources/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

<!-- Template Javascript -->
<script src="resources/js/main.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
    window.onload = () => {
        // Obtener la fecha actual en el formato 'YYYY-MM-DD'
        const fechaActual = new Date().toISOString().split('T')[0];

        // Establecer el valor del campo de fecha
        document.getElementById('fecha').value = fechaActual;

        fetch('/asignacion/folio')
            .then(response => response.json())
            .then(data => {
                const selectEquipos = document.getElementById('folio');
                data.forEach(equipos => {
                    const option = document.createElement('option');
                    option.value = equipos.equiposFolio;
                    option.textContent = equipos.equiposFolio;
                    selectEquipos.appendChild(option);
                });

                // Agregar evento de cambio al select
                selectEquipos.addEventListener('change', function() {
                    // Obtener el valor seleccionado del select
                    const selectedFolio = this.value;

                    // Realizar la solicitud AJAX
                    fetch(`/asignacion/equipo/${selectedFolio}`)
                        .then(response => response.json())
                        .then(data => {
                            // Actualizar los campos de texto con los datos obtenidos de la base de datos
                            document.querySelector('input[name="serie"]').value = data.equiposSerie;
                            document.querySelector('input[name="marca"]').value = data.marcaNombre;
                            document.querySelector('input[name="tipo"]').value = data.tipoEquipoNombre;
                            document.querySelector('input[name="modelo"]').value = data.equiposmodelo;
                            document.querySelector('input[name="ram"]').value = data.equiposRam;
                            document.querySelector('input[name="velocidad"]').value = data.equiposVelocidad;
                            document.querySelector('input[name="disco"]').value = data.equiposDiscoDuro;
                        })
                        .catch(error => console.error('Error al obtener los datos del equipo: ', error));
                });
            })
        .catch(error => console.error('Error al obtener el folio: ', error));


        fetch('/asignacion/personal')
            .then(response => response.json())
            .then(data => {
                const selectPersonal = document.getElementById('personal');
                data.forEach(personal => {
                    const option = document.createElement('option');
                    option.value = personal.personalId;
                    option.textContent = personal.personalNombre;
                    selectPersonal.appendChild(option);
                });
            })
        .catch(error => console.error('Error al obtener al personal: ', error));


        fetch('/asignacion/lugar')
            .then(response => response.json())
            .then(data => {
                const selectLugar = document.getElementById('lugar');
                data.forEach(lugar => {
                    const option = document.createElement('option');
                    option.value = lugar.lugarId;
                    option.textContent = lugar.lugarSiglas;
                    selectLugar.appendChild(option);
                });

                // Agregar evento de cambio al select
                selectLugar.addEventListener('change', function() {
                    // Obtener el valor seleccionado del select
                    const selectedId = this.value;

                    // Realizar la solicitud AJAX para obtener los datos del lugar
                    fetch(`/asignacion/lugar/${selectedId}`)
                        .then(response => response.json())
                        .then(data => {
                            document.querySelector('input[name="edificio"]').value = data.lugarEdificios;
                        })
                    .catch(error => console.error('Error al obtener los datos del lugar: ', error));
                });
            })
        .catch(error => console.error('Error al obtener el lugar: ', error));
    };
</script>

    <% if (typeof alert != "undefined")  { %>
        <script>
            Swal.fire({
                title:'<%= alertTitle %>',
                text:'<%= alertMessage %>',
                icon:'<%= alertIcon %>',
                showConfirmButton: <%= showConfirmButton %>,
                timer: <%= timer %>
            }).then(()=>{
                window.location='/<%= ruta %>'
            })
        </script>
    <% } %>
</script>
<%- include ('../Sesion.ejs') %>
</body>
</html>
